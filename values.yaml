imagePullSecrets: []

clusterDomain: cluster.local

general:
    smtp:
        SMTP_HOST: YOUR.SMTP.HOST
        SMTP_PORT: SMTP PORT
        SMTP_SENDER_ADDRESS: voltaserve-noreply@YOUR.SMTP.HOST
        SMTP_SENDER_NAME: Voltaserve
        SMTP_SECURE: false
    envs:
        S3_URL: YOUR OWN S3 URL
        S3_REGION: REGION_THAT_MINIO_WILL_PROVISION
        S3_SECURE: false
        POSTGRES_URL: PSQL connection string for cockroach databse
        PUBLIC_UI_URL: Your public url if you don't use ingress from our chart
        REDIS_ADDRESS: Your redis instance url
        SEARCH_URL: Your meilisearch instance
        TOKEN_ISSUER: localhost
        TOKEN_AUDIENCE: localhost
        TOKEN_ACCESS_TOKEN_LIFETIME: 86400
        TOKEN_REFRESH_TOKEN_LIFETIME: 2592000
    secrets:
        SMTP_USERNAME: SMTP USERNAME
        SMTP_PASSWORD: SMTP PASSWORD
        SECURITY_JWT_SIGNING_KEY: &jwt_signing_key FIXED JWT SIGNING KEY
        SECURITY_API_KEY: SECURITY APIKEY
        S3_ACCESS_KEY: voltaserve
        S3_SECRET_KEY: voltaserve

api:
    existingSecret: null
    image:
        repository: null
        tag: null
    service:
        port: 8080
        type: ClusterIP
        annotations:
            {}
    envs:
        {}
    deployment:
        imagePullPolicy:
        replicaCount: 1
        podAnnotations:
            {}
        podLabels:
            {}
        livenessProbePath: null
        readinessProbePath: null
        security:
            securityContext:
                {}
            podSecurityContext:
                {}
        resources:
            {}
        volumeMounts:
            {}
        volumes:
            {}
        nodeSelector:
            {}
        affinity:
            {}
        tolerations:
            {}

    
conversion:
    existingSecret: null
    image:
        repository: null
        tag: null
    service:
        port: 8083
        type: ClusterIP
        annotations:
            {}
    envs:
        {}
    deployment:
        imagePullPolicy:
        replicaCount: 1
        podAnnotations:
            {}
        podLabels:
            {}
        livenessProbePath: null
        readinessProbePath: null
        security:
            securityContext:
                {}
            podSecurityContext:
                {}
        resources:
            {}
        volumeMounts:
            {}
        volumes:
            {}
        nodeSelector:
            {}
        affinity:
            {}
        tolerations:
            {}

idp:
    existingSecret: null
    image:
        repository: null
        tag: null
    service:
        port: 8081
        type: ClusterIP
        annotations:
            {}
    envs:
        {}
    deployment:
        imagePullPolicy:
        replicaCount: 1
        podAnnotations:
            {}
        podLabels:
            {}
        livenessProbePath: null
        readinessProbePath: null
        security:
            securityContext:
                {}
            podSecurityContext:
                {}
        resources:
            {}
        volumeMounts:
            {}
        volumes:
            {}
        nodeSelector:
            {}
        affinity:
            {}
        tolerations:
            {}
        
    
language:
    image:
        repository: null
        tag: null
    service:
        port: 8084
        type: ClusterIP
        annotations:
            {}
    deployment:
        imagePullPolicy:
        replicaCount: 1
        podAnnotations:
            {}
        podLabels:
            {}
        livenessProbePath: null
        readinessProbePath: null
        security:
            securityContext:
                {}
            podSecurityContext:
                {}
        resources:
            {}
        volumeMounts:
            {}
        volumes:
            {}
        nodeSelector:
            {}
        affinity:
            {}
        tolerations:
            {}

mosaic:
    existingSecret: null
    image:
        repository: null
        tag: null
    service:
        port: 8085
        type: ClusterIP
        annotations:
            {}
    envs:
        {}
    deployment:
        imagePullPolicy:
        replicaCount: 1
        podAnnotations:
            {}
        podLabels:
            {}
        livenessProbePath: null
        readinessProbePath: null
        security:
            securityContext:
                {}
            podSecurityContext:
                {}
        resources:
            {}
        volumeMounts:
            {}
        volumes:
            {}
        nodeSelector:
            {}
        affinity:
            {}
        tolerations:
            {}
    
ui:
    existingSecret: null
    ingress:
        enabled: true
        host: ui.public.url
        annotations:
            {}
        className: nginx-public
        tls:
            []
    image:
        repository: null
        tag: null
    service:
        port: 3000
        type: ClusterIP
        annotations:
            {}
    envs:
        {}
    deployment:
        imagePullPolicy:
        replicaCount: 1
        podAnnotations:
            {}
        podLabels:
            {}
        livenessProbePath: null
        readinessProbePath: null
        security:
            securityContext:
                {}
            podSecurityContext:
                {}
        resources:
            {}
        volumeMounts:
            {}
        volumes:
            {}
        nodeSelector:
            {}
        affinity:
            {}
        tolerations:
            {}

webdav:
    existingSecret: null
    ingress:
        enabled: true
        annotations:
            {}
        host: webdav.public.url
        className: nginx-public
        tls:
            []
    image:
        repository: null
        tag: null
    service:
        port: 8082
        type: ClusterIP
        annotations:
            {}
    envs:
        {}
    deployment:
        imagePullPolicy:
        replicaCount: 1
        podAnnotations:
            {}
        podLabels:
            {}
        livenessProbePath: null
        readinessProbePath: null
        security:
            securityContext:
                {}
            podSecurityContext:
                {}
        resources:
            {}
        volumeMounts:
            {}
        volumes:
            {}
        nodeSelector:
            {}
        affinity:
            {}
        tolerations:
            {}

redis:
    enabled: false

minio:
    enabled: false

cockroachdb:
    enabled: false

meilisearch:
    enabled: false